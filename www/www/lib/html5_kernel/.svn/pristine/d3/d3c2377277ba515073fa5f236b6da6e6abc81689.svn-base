var DatabasePlugin = function() {
}

//Prototype for INSERT...
DatabasePlugin.prototype.insertQuery = function(str, success, fail) {
	PhoneGap.exec(success, fail, "DatabasePlugin", "insert", [str]);
};

//Prototype for INSERT_BUSINESS_ENTITY...
DatabasePlugin.prototype.insertBEQuery = function(str, success, fail) {
	PhoneGap.exec(success, fail, "DatabasePlugin", "insertBE", str);
};

//Prototype for SELECT operation...
DatabasePlugin.prototype.selectQuery = function(str, success, fail) {
	PhoneGap.exec(success, fail, "DatabasePlugin", "select", [str]);
};

//Prototype for DELETE operation...
DatabasePlugin.prototype.deleteQuery = function(str, success, fail) {
	PhoneGap.exec(success, fail, "DatabasePlugin", "delete", [str]);
};

//Prototype for UPDATE...
DatabasePlugin.prototype.updateQuery = function(str, success, fail) {
	PhoneGap.exec(success, fail, "DatabasePlugin", "update", [str]);
};

//=========================================INSERT_QUERY================================================
/**
 * Method insert.
 * @param tableName String
 * @param fieldObject Object
 * @param isHeader Boolean
 * @param insertQueryCallback functionName
 * returns LID
 */
DatabasePlugin.prototype.insert=function(tableName, fieldObject, isHeader,insertQueryCallback) {
  	
	var query={"tableName":tableName,
			  "isHeader":isHeader,
			  "fields":fieldObject };
this.insertQuery(query,function(result){insertQueryCallback(result)},function(e){console.log(e)});		
}

//=========================================INSERT_BE_QUERY================================================
/**
 * @param BEArray Array
 * @param insertBEQueryCallback functionName
 */
DatabasePlugin.prototype.insertBE=function(BEArray,insertBEQueryCallback) {
this.insertBEQuery(BEArray,function(result){insertBEQueryCallback(result)},function(e){console.log(e)});		
}

//============================================SELECT_QUERY================================================
/**
 * Method retrieve.
 * @param tableName String
 * @param  whereClause String
 * @param selectSuccessCallback function name
 */
DatabasePlugin.prototype.select=function(tableName, whereClause, selectSuccessCallback){
	var query="";
	if(whereClause=="" || whereClause==null || whereClause==undefined)
	{
		query={"tableName":tableName,"whereClause":""};
	}else{
		query={"tableName":tableName,"whereClause":whereClause};
	}
	this.selectQuery(query,function(result){selectSuccessCallback(result)},function(e){console.log(e)});
}

//===============================================DELETE_QUERY================================================
/**
 * Method delete.
 * @param tableName String
 * @param columnNames Array
 * @param columnValues Array
 */
DatabasePlugin.prototype.deleteItem=function(tableName,whereClause,deleteQueryCallback){
	
	var query="";
	if(whereClause=="" || whereClause==null || whereClause==undefined)
	{
		query={"tableName":tableName,"whereClause":""};
	}else{
		query={"tableName":tableName,"whereClause":whereClause};
	}
	this.deleteQuery(query,function(){deleteQueryCallback()},function(e){console.log(e)});
}

//===========================================UPDATE_QUERY=================================================
/**
 * Method retrieve.
 * @param tableName String
 * @param setfieldObject Object
 * @param whereClause String
 * @param isHeader Boolean
 */
DatabasePlugin.prototype.update=function(tableName, setfieldObject,whereClause,updateQueryCallback){

	var query="";
	query=this.prepareUpdateQuery(tableName, setfieldObject,whereClause);
	this.updateQuery(query,function(){updateQueryCallback()},function(e){console.log(e)});
}

function updateQueryCallback()
{
	console.log("Record successfully updated");
}

DatabasePlugin.prototype.prepareUpdateQuery=function(tableName, setfieldObject,whereClause)
{
	var tableObj=new Object();
	tableObj={"tableName":tableName,
			  "fields":setfieldObject,
			  "whereClause":whereClause};
	return tableObj;
}

//=================================REGISTER PLUGIN===============================================
PhoneGap.addConstructor(function() {
	if (!window.plugins) {
		window.plugins = {};
	}
	window.plugins.DatabasePlugin = new DatabasePlugin();
});